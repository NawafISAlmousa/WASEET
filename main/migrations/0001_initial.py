# Generated by Django 5.0.1 on 2024-10-17 21:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('adminid', models.AutoField(db_column='AdminID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=100, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerid', models.AutoField(db_column='CustomerID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=25, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=25, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True, unique=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=25, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=100, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=14, null=True)),
                ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=1, null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMessagesProvider',
            fields=[
                ('messageid', models.AutoField(db_column='MessageID', primary_key=True, serialize=False)),
                ('messagetext', models.TextField(blank=True, db_column='MessageText', null=True)),
                ('timestamp', models.DateTimeField(blank=True, db_column='Timestamp', null=True)),
            ],
            options={
                'db_table': 'customer_messages_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('starttime', models.TimeField(blank=True, db_column='StartTime', null=True)),
                ('endtime', models.TimeField(blank=True, db_column='EndTime', null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.AutoField(db_column='LocationID', primary_key=True, serialize=False)),
                ('coordinates', models.CharField(blank=True, db_column='Coordinates', max_length=25, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=14, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=150, null=True)),
            ],
            options={
                'db_table': 'location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('providerid', models.AutoField(db_column='ProviderID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True, unique=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=25, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tagid', models.AutoField(db_column='TagID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('reportid', models.AutoField(db_column='ReportID', primary_key=True, serialize=False)),
                ('reporteeid', models.IntegerField(db_column='ReporteeID')),
                ('reporteetype', models.CharField(db_column='ReporteeType', max_length=8)),
                ('reportedid', models.IntegerField(db_column='ReportedID')),
                ('reportedtype', models.CharField(db_column='ReportedType', max_length=8)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=8, null=True)),
            ],
            options={
                'db_table': 'report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewid', models.AutoField(db_column='ReviewID', primary_key=True, serialize=False)),
                ('reviewtext', models.TextField(blank=True, db_column='ReviewText', null=True)),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FavoriteItems',
            fields=[
                ('customerid', models.OneToOneField(db_column='CustomerID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.customer')),
            ],
            options={
                'db_table': 'favorite_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FavoriteProviders',
            fields=[
                ('customerid', models.OneToOneField(db_column='CustomerID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.customer')),
            ],
            options={
                'db_table': 'favorite_providers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationHasItem',
            fields=[
                ('locationid', models.OneToOneField(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.location')),
            ],
            options={
                'db_table': 'location_has_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProvidersTags',
            fields=[
                ('tagid', models.OneToOneField(db_column='TagID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.tags')),
            ],
            options={
                'db_table': 'providers_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewResponses',
            fields=[
                ('reviewid', models.OneToOneField(db_column='ReviewID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.review')),
            ],
            options={
                'db_table': 'review_responses',
                'managed': False,
            },
        ),
    ]
